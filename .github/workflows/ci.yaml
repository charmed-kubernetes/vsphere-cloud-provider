name: Tests
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: python3 -m pip install tox
      - name: Run linters
        run: tox -e lint
  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: python -m pip install tox
      - name: Run tests
        run: tox -e unit
  integration-test:
    name: Integration test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
      - name: Run test
        run: sg microk8s -c "tox -e integration"

      - name: Setup Debug Artifact Collection
        if: ${{ failure() }}
        run: mkdir tmp
      - name: Collect K8s Status
        if: ${{ failure() }}
        run: sudo microk8s.kubectl get all -A 2>&1 | tee tmp/microk8s-status-all.txt
      - name: Collect Juju Status
        if: ${{ failure() }}
        run: sudo juju status 2>&1 | tee tmp/juju-status.txt
      - name: Collect K8s Deployment details
        if: ${{ failure() }}
        run: sudo microk8s.kubectl describe deployments -A 2>&1 | tee tmp/microk8s-deployments.txt
      - name: Collect K8s ReplicaSet details
        if: ${{ failure() }}
        run: sudo microk8s.kubectl describe replicasets -A 2>&1 | tee tmp/microk8s-replicasets.txt
      - name: Collect K8s DaemonSet details
        if: ${{ failure() }}
        run: sudo microk8s.kubectl describe daemonsets -A 2>&1 | tee tmp/microk8s-daemonsets.txt
      - name: Collect K8s pod logs
        if: ${{ failure() }}
        run: |
          for ns in `sudo microk8s.kubectl get pods -A | awk '{printf "%s;%s\n",$1,$2 }' | grep -v NAME`; do
            NS_POD=(${ns//;/' '})
            echo "Pod logs for: $NS_POD"
            echo "----------------------------------"
            sudo microk8s.kubectl logs ${NS_POD[1]} -n ${NS_POD[0]} 2>&1 | tee tmp/pod-${NS_POD[0]}-logs.txt
            echo
            echo
          done
      - name: Collect microk8s snap logs
        if: ${{ failure() }}
        run: sudo snap logs -n 300 microk8s 2>&1 | tee tmp/snap-log-microk8s.txt
      - name: Collect Juju logs for vsphere-cloud-provider-operator
        if: ${{ failure() }}
        run: sudo juju debug-log --replay --no-tail -i vsphere-cloud-provider-operator | tee tmp/unit-vsphere-cloud-provider-operator-0.log
      - name: Upload debug artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-run-artifacts
          path: tmp