### cpi-config-map.yaml
###    str juju_app   : name of deployed application
###    str server     : ip address or fqdn of vsphere endpoint
###    str datacenter : vsphere virtual datacenter
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    juju-application: test_render_all
data:
  cpi-vsphere.conf: |
    [Global]
    port = "443"
    insecure-flag = "true" #Optional. Please tweak based on setup.
    secret-name = "cpi-global-secret"
    secret-namespace = "kube-system"
    [VirtualCenter "1.2.3.4"]
    datacenters = "dc1"
### cpi-provider.yaml
###    str juju_app      : name of deployed application
###    str node_selector : label which targets control-plane nodes
###    str image         : vsphere CCM image
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloud-controller-manager
  namespace: kube-system
  labels:
    juju-application: test_render_all
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: vsphere-cloud-controller-manager
  namespace: kube-system
  labels:
    juju-application: test_render_all
    k8s-app: vsphere-cloud-controller-manager
spec:
  selector:
    matchLabels:
      k8s-app: vsphere-cloud-controller-manager
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: vsphere-cloud-controller-manager
        juju-application: test_render_all
    spec:
      nodeSelector:
        juju-application: kubernetes-control-plane
      securityContext:
        runAsUser: 0
      tolerations:
      - key: node.cloudprovider.kubernetes.io/uninitialized
        value: "true"
        effect: NoSchedule
      - key: node-role.kubernetes.io/controlplane
        value: "true"
        effect: NoSchedule
      - key: node-role.kubernetes.io/etcd
        value: "true"
        effect: NoExecute
      serviceAccountName: cloud-controller-manager
      containers:
        - name: vsphere-cloud-controller-manager
          image: gcr.io/cloud-provider-vsphere/cpi/release/manager:latest
          args:
            - --v=2
            - --cloud-provider=vsphere
            - --cloud-config=/etc/cloud/cpi-vsphere.conf
          volumeMounts:
            - mountPath: /etc/cloud
              name: vsphere-config-volume
              readOnly: true
          resources:
            requests:
              cpu: 200m
      hostNetwork: true
      volumes:
      - name: vsphere-config-volume
        configMap:
          name: cloud-config
---
apiVersion: v1
kind: Service
metadata:
  name: vsphere-cloud-controller-manager
  namespace: kube-system
  labels:
    component: cloud-controller-manager
    juju-application: test_render_all
spec:
  type: NodePort
  ports:
    - port: 43001
      protocol: TCP
      targetPort: 43001
  selector:
    component: cloud-controller-manager
---
### cpi-role-bindings.yaml
###    Originally sourced from
###    https://raw.githubusercontent.com/kubernetes/cloud-provider-vsphere/master/manifests/controller-manager/cloud-controller-manager-role-bindings.yaml
###    str juju_app : name of deployed application
---
apiVersion: v1
kind: List
items:
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: servicecatalog.k8s.io:apiserver-authentication-reader
    namespace: kube-system
    label:
      juju-application: test_render_all
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: extension-apiserver-authentication-reader
  subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: cloud-controller-manager
    namespace: kube-system
  - apiGroup: ""
    kind: User
    name: cloud-controller-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: system:cloud-controller-manager
    label:
      juju-application: test_render_all
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:cloud-controller-manager
  subjects:
  - kind: ServiceAccount
    name: cloud-controller-manager
    namespace: kube-system
  - kind: User
    name: cloud-controller-manager
metadata: {}
### cpi-roles.yaml
###    Originally sourced from
###    https://raw.githubusercontent.com/kubernetes/cloud-provider-vsphere/master/manifests/controller-manager/cloud-controller-manager-roles.yaml
###    str juju_app : name of deployed application
---
apiVersion: v1
kind: List
items:
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: system:cloud-controller-manager
    label:
      juju-application: test_render_all
  rules:
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - '*'
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - services/status
    verbs:
    - patch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - create
    - get
    - list
    - watch
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - create
    - get
    - list
    - watch
    - update
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - "coordination.k8s.io"
    resources:
    - leases
    verbs:
    - get
    - list
    - watch
    - create
    - update
metadata: {}
### cpi-secret.yaml
###    str juju_app : name of deployed application
###    str server   : ip address or fqdn of vsphere endpoint
###    str username : credentials to connect to endpoint
###    str password : credentials to connect to endpoint
---
apiVersion: v1
kind: Secret
metadata:
  name: cpi-global-secret
  namespace: kube-system
  label:
    juju-application: test_render_all
stringData:
  1.2.3.4.username: "alice@vsphere.local"
  1.2.3.4.password: "s3cr3t"
